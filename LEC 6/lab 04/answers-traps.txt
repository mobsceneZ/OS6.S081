A1: a0-a7 contain arguments to functions. Register a2 holds 13 in main's call to printf.
A2: Compiler optimizes call to function f out for main (it directly uses immediate value 12)
    Call to function g is inlined too with instruction "addiw a0, a0, 3"
A3: printf's address: 0x30 + hex(1536) = 0x30 + 0x600 = 0x630
A4: ra = PC + 4 = 0x34 + 4 = 0x38
A5: The output is "HE110 World".
    If RISC-V is big-endian, i should be 0x726c6400. No need to change 57616 since it must be interpreted as 0xE110.
A6: It depends on the value of a2, so the result varies.
    It's because the number of format string arguments doesn't match the number of given variables/constants.
